<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css" type="text/css">
    <title>home</title>
</head>
<body>
<div class="container-fluid main">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                {{ user }}
                <div class="card-header text-center">chat</div>
                <div class="card-body chat-body">
                </div>
                <div class="card-footer">
                    <form action="">
                        <div class="form-group">
                            <div class="row">
                                <input type="text" class="form-control chat_text" id="chat_text" style="width: 85%;">
                                <button type="submit" class="btn btn-success float-right" id="send_btn">Send</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header text-center">users</div>
                <div class="card-body users-body"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <canvas id="canvas" width="1300" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/js/jquery.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    var socket = io();
    let btn = $("#send_btn");
    var chat_text = $(".chat_text");

    btn.on('click', function (e) {
        e.preventDefault();
        socket.emit("new_message", {
            type: "text",
            content: chat_text.val(),
            user: localStorage.getItem("email").substring(0, localStorage.email.lastIndexOf("@")),
            usage: "group",
            sender: localStorage.getItem("email"),
            direction: null
        });
        chat_text.val("");
    });

    socket.on("get_user", function (user) {
        console.log(user);
        $(".users-body").append(`<p>${user}</p>`);
    });
    $(".users-body").append(`<p>${localStorage.email.substring(0, localStorage.email.lastIndexOf("@"))}</p>`);
    socket.on("received", function (data) {
        $(".chat-body").append(`<div style="float: ${data.direction}">${data.user}:: ${data.content} </div>`);
        $(".chat-body").append("<br>");
    });

    var mousePressed = false;
    var lastX, lastY;
    var ctx;

    ctx = document.getElementById('canvas').getContext("2d");
    ctx.strokeStyle = "tomato";
    $('#canvas').mousedown(function (e) {
        mousePressed = true;
        Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, false);
    });

    $('#canvas').mousemove(function (e) {
        if (mousePressed) {
            Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, true);
        }
    });

    $('#canvas').mouseup(function (e) {
        mousePressed = false;
    });
    $('#canvas').mouseleave(function (e) {
        mousePressed = false;
    });


    function Draw(x, y, isDown) {
        if (isDown) {
            ctx.beginPath();
            ctx.lineJoin = "round";
            ctx.moveTo(lastX, lastY);
            var position = {
                x: x,
                y: y,
                isDown: isDown
            };
            socket.emit("draw", position);
        }
    }

    socket.on("do_draw", function (line) {
        if (line.isDown){
            ctx.beginPath();
            ctx.lineJoin = "round";
            ctx.moveTo(lastX, lastY);
            console.log(line);
            ctx.lineTo(line.x, line.y);
            ctx.closePath();
            ctx.stroke();
        }
        lastX = line.x;
        lastY = line.y;
    });

</script>
</body>
</html>